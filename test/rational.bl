def Rational Rational of (int, int)
def (display r?: Rational)
    display r.0
    display "/"
    display r.1

    r . 0
    (at r 0)
    at :: any[] -> int -> any
    at :: (any tuple) -> int -> any

    int, int, int
    Pair(int, Pair(int, int))
    at :: (any, any) -> int -> any
    any-tuple

def (variadic x?: int... y?: string)
    (int..., string)
    (int, string)
    (int, int, string)
    (string)

def x: Rational (1, 2)
display x